---

global:
  registry: ''

eighteen_app_api_test:
  images:
    nginx:
      repository: docker.io/openresty/openresty
      tag: 1.15.8.3-alpine
      pullPolicy: IfNotPresent

  nginx_config: |
    log_format bodylog '$remote_addr - $remote_user [$time_local] '
      '"$request" "$args" $status $body_bytes_sent '
      '"$http_referer" "$http_user_agent" $request_time '
      '\n\n"$req_headers" \n"$req_body" \n>"$resp_body"';

    server {
      listen 80;
      listen [::]:80;
      server_name 18app-api-test.teamdigitale.it;

      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header X-Frame-Options "SAMEORIGIN";

      client_max_body_size 2M;

      root /var/www/html;
      index index.html index.htm;

      lua_need_request_body on;

      set $resp_body "";
      set $req_body "";
      set $req_headers "";

      rewrite_by_lua_block {
        local req_headers = "Headers: ";
        ngx.var.req_body = ngx.req.get_body_data();
        local h, err = ngx.req.get_headers()
        for k, v in pairs(h) do
          req_headers = req_headers .. k .. ": " .. v .. "\n";
        end

        ngx.var.req_headers = req_headers;
      }

      body_filter_by_lua '
      local resp_body = string.sub(ngx.arg[1], 1, 1000)
      ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
      if ngx.arg[2] then
        ngx.var.resp_body = ngx.ctx.buffered
      end
      ';

      location / {
        proxy_pass https://apitest.18app.italia.it/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 10s;
        proxy_read_timeout 20s;
        proxy_ssl_server_name on;
      }

      location ~ /\.git {
        deny all;
      }
    }

  services:
    nginx:
      httpPort:
        servicePort: 80
        containerPort: 80

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      cert-manager.io/acme-challenge-type: http01
    path: /
    hosts:
      - 18app-api-test.teamdigitale.it
    tls:
      - hosts:
          - 18app-api-test.teamdigitale.it
        secretName: 18app-api-test-prod-tls

  resources:
    # For each of the following objects, set limits
    # removing the curly brackets after resources and
    # uncommenting the lines below.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    nginx: {}

  nodeSelector: {}

  tolerations: {}

  affinity: {}
